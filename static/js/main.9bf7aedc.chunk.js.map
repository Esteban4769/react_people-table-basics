{"version":3,"sources":["components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","pages/People/PeoplePage.tsx","pages/Home/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/Navbar.tsx","App.tsx","index.tsx"],"names":["PersonLink","person","name","sex","slug","className","cn","to","PersonInfo","isSelected","born","died","fatherName","motherName","mother","father","PeopleTable","people","selectedPersonSlug","map","find","parent","personWithParentsLinks","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","setPeople","errorOnLoad","setErrorOnLoad","isLoading","setIsLoading","useParams","loadPeople","peopleFromServer","useEffect","length","HomePage","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9bf7aedc.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      className={cn({ 'has-text-danger': sex === 'f' })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n  isSelected: boolean\n}\n\nexport const PersonInfo: React.FC<Props> = ({ person, isSelected }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>\n        {sex}\n      </td>\n\n      <td>\n        {born}\n      </td>\n\n      <td>\n        {died}\n      </td>\n\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : (motherName || '-')}\n      </td>\n\n      <td>\n        {father\n          ? (<PersonLink person={father} />)\n          : (fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ninterface Props {\n  people: Person[];\n  selectedPersonSlug: string;\n}\n\nexport const PeopleTable:React.FC<Props> = ({ people, selectedPersonSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      // eslint-disable-next-line max-len\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const { slug } = person;\n          const isSelected = selectedPersonSlug === slug;\n\n          const mother = people\n            .find(parent => parent.name === person.motherName);\n\n          const father = people\n            .find(parent => parent.name === person.fatherName);\n\n          const personWithParentsLinks = { ...person, mother, father };\n\n          return (\n            <PersonInfo\n              key={slug}\n              person={personWithParentsLinks}\n              isSelected={isSelected}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorOnLoad, setErrorOnLoad] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { slug = '' } = useParams();\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setErrorOnLoad(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorOnLoad && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!people.length && !errorOnLoad && !isLoading)\n            ? (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            ) : <PeopleTable people={people} selectedPersonSlug={slug} />}\n        </div>\n      </div>\n\n    </>\n\n  );\n};\n","export const HomePage = () => {\n  return (<h1 className=\"title\">Home Page</h1>);\n};\n","export const NotFoundPage = () => {\n  return (<h1 className=\"title\">Page not found</h1>);\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './pages/People/PeoplePage';\nimport { HomePage } from './pages/Home/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { Navbar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}